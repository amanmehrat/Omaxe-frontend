[{"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\HomePage.js":"1","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\Login.js":"2","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfAuth.js":"3","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\myTeam\\myTeam.js":"4","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Loading.js":"5","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\object.js":"6","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Project.js":"7","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfProjectSelected.js":"8","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\Dashboard.js":"9","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Sidebar.js":"10","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\Project.js":"11","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\FileUploader.js":"12","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\project\\project.js":"13","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\flat\\flatById.js":"14","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyTextInput.js":"15","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\index.js":"16","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Auth.js":"17","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\error\\errorContext.js":"18","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Navbar.js":"19","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\FormError.js":"20","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\AddProject.js":"21","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ExportExcel.js":"22","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\FlatRoutes.js":"23","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\Search.js":"24","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\NotFound.js":"25","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\AddFlat.js":"26","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Spinner.js":"27","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ImportExcel.js":"28","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\ProjectRoutes.js":"29","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\func.js":"30","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyCheckBox.js":"31","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\Flat.js":"32"},{"size":247,"mtime":1611558876000,"results":"33","hashOfConfig":"34"},{"size":4752,"mtime":1611558876000,"results":"35","hashOfConfig":"34"},{"size":282,"mtime":1614443209962,"results":"36","hashOfConfig":"34"},{"size":14360,"mtime":1614440938808,"results":"37","hashOfConfig":"34"},{"size":295,"mtime":1611558876000,"results":"38","hashOfConfig":"34"},{"size":1351,"mtime":1611558876000,"results":"39","hashOfConfig":"34"},{"size":1261,"mtime":1614353340846,"results":"40","hashOfConfig":"34"},{"size":318,"mtime":1614443226752,"results":"41","hashOfConfig":"34"},{"size":1369,"mtime":1614386267673,"results":"42","hashOfConfig":"34"},{"size":4810,"mtime":1614440691232,"results":"43","hashOfConfig":"34"},{"size":9670,"mtime":1614426495874,"results":"44","hashOfConfig":"34"},{"size":2472,"mtime":1614387776313,"results":"45","hashOfConfig":"34"},{"size":4555,"mtime":1614440920799,"results":"46","hashOfConfig":"34"},{"size":8920,"mtime":1614440245306,"results":"47","hashOfConfig":"34"},{"size":901,"mtime":1614021295862,"results":"48","hashOfConfig":"34"},{"size":1303,"mtime":1614173247751,"results":"49","hashOfConfig":"34"},{"size":1193,"mtime":1611558876000,"results":"50","hashOfConfig":"34"},{"size":2448,"mtime":1611558876000,"results":"51","hashOfConfig":"34"},{"size":1685,"mtime":1614352733511,"results":"52","hashOfConfig":"34"},{"size":967,"mtime":1611558876000,"results":"53","hashOfConfig":"34"},{"size":16276,"mtime":1614383800993,"results":"54","hashOfConfig":"34"},{"size":5430,"mtime":1614440505668,"results":"55","hashOfConfig":"34"},{"size":768,"mtime":1614440914776,"results":"56","hashOfConfig":"34"},{"size":662,"mtime":1614070258081,"results":"57","hashOfConfig":"34"},{"size":89,"mtime":1614443275850,"results":"58","hashOfConfig":"34"},{"size":18128,"mtime":1614426111249,"results":"59","hashOfConfig":"34"},{"size":653,"mtime":1614352391939,"results":"60","hashOfConfig":"34"},{"size":7563,"mtime":1614440584006,"results":"61","hashOfConfig":"34"},{"size":609,"mtime":1614440907242,"results":"62","hashOfConfig":"34"},{"size":293,"mtime":1614440898591,"results":"63","hashOfConfig":"34"},{"size":968,"mtime":1614441402181,"results":"64","hashOfConfig":"34"},{"size":8861,"mtime":1614443630014,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1acfzf9",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\HomePage.js",[],["135","136"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\Login.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfAuth.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\myTeam\\myTeam.js",["137","138","139"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Loading.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\object.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Project.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfProjectSelected.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\Dashboard.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Sidebar.js",["140","141","142","143","144","145","146","147"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\Project.js",["148","149","150","151","152","153","154","155","156","157","158"],"\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport cm from \"classnames\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGet, usePost, usePut } from \"../../utils/hooks\";\r\nimport { errorContext } from \"../../components/contexts/error/errorContext\";\r\nimport AuthContext from \"../../components/contexts/Auth\";\r\nimport { useProjectActionsContext } from '../../components/contexts/Project';\r\n\r\nimport Search from '../customInputs/Search';\r\nimport ExportExcel from '../ExportExcel';\r\nimport ImportExcel from '../ImportExcel';\r\nimport Loading from '../Loading';\r\nimport NoData from \"../NoData\";\r\nimport pencil_black from \"../../img/pencil_black.svg\";\r\n\r\nimport './Project.css'\r\n\r\n\r\nconst Project = () => {\r\n    let history = useHistory();\r\n    const { projectId } = useParams();\r\n\r\n    const { user } = useContext(AuthContext);\r\n    const errorCtx = useContext(errorContext);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadFlats, setLoadFlats] = useState(false);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [project, setProject] = useState(null);\r\n    const [flats, setFlats] = useState(null);\r\n    const [oldFlats, setOldFlats] = useState(null);\r\n    const [exportOpen, setExportOpen] = useState(false);\r\n    const [importOpen, setImportOpen] = useState(false);\r\n    const setSelectedProjectId = useProjectActionsContext();\r\n\r\n    const handleExportOpen = () => setExportOpen(true);\r\n    const handleExportClose = () => setExportOpen(false);\r\n    const handleImportOpen = () => setImportOpen(true);\r\n    const handleImportClose = () => setImportOpen(false);\r\n\r\n    const { run: getProjectById } = usePost(\"/projects/GetProject\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setLoadFlats(false);\r\n                let requiredProject = data?.projects.find(project => project.id == projectId);\r\n                requiredProject.projectsBillingInformations = requiredProject?.projectsBillingInformations?.find(billingInfo => billingInfo.proj_id == projectId);\r\n                setProject(requiredProject);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n            }\r\n        });\r\n    const { run: getFlatsList } = usePost(\"/flats\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setFlats(data.flats);\r\n                setOldFlats(data.flats);\r\n                setLoading(false);\r\n                // if (data && data.flats && data.flats[0] && data.flats[0].project)\r\n                //     setProjectName(data.flats[0].project.name);\r\n                // setTotalNoOfFlat(data.flats.length);\r\n                // setLoading(false);\r\n            },\r\n            onReject: (error) => {\r\n                console.log(\"error ------\", error);\r\n            }\r\n        });\r\n\r\n\r\n    useEffect(() => {\r\n        if (projectId) {\r\n            setLoading(true);\r\n            setSelectedProjectId(projectId);\r\n            getProjectById({ projId: projectId });\r\n            getFlatsList({ projectId: projectId });\r\n        }\r\n    }, [projectId]);\r\n\r\n    useEffect(() => {\r\n        if (projectId && loadFlats) {\r\n            console.log(\"Load Flats\");\r\n            getFlatsList({ projectId: projectId });\r\n        }\r\n    }, [loadFlats]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        searchFlats();\r\n    }, [searchText]);\r\n\r\n    const searchFlats = () => {\r\n        const searchValue = searchText;\r\n        console.log(\"searchValue\", searchValue);\r\n        let newFlats = [];\r\n        if (searchValue == \"\") {\r\n            console.log(\"searchValue1\", searchValue);\r\n            newFlats = oldFlats\r\n        } else {\r\n            newFlats = oldFlats.filter(obj => {\r\n                return obj.residentName.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.ownerName.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.flatNumber.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.blockIncharge.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.meterNumber.toUpperCase().includes(searchValue.toUpperCase());\r\n            });\r\n        }\r\n        setFlats(newFlats);\r\n        setLoading(false);\r\n    }\r\n    const goToFlat = (id) => { history.push(\"/flat/\" + id) }\r\n    const goToEditFlat = (id) => { history.push(\"/flat/edit/\" + id) }\r\n    const renderFlats = () => {\r\n        if (flats && flats.length > 0) {\r\n            return [\r\n                flats.map(flat => {\r\n                    let { id, residentName, ownerName, propertyType, flatNumber, blockNumber, projectId } = flat;\r\n                    return (\r\n                        <div key={id} className={cm(\"parentGrid\", { \"parentGrid__active\": false })}\r\n                            onClick={(e) => goToFlat(id)}\r\n                        >\r\n                            <div className=\"child1 \">\r\n                                <p className=\"text pointer\">{flatNumber}</p>\r\n                            </div>\r\n                            <div className=\"child2\">\r\n                                <p className=\"text pointer\">{blockNumber}</p>\r\n                            </div>\r\n                            <div className=\"child3\">\r\n                                <p className=\"text pointer\">{residentName}</p>\r\n                            </div>\r\n                            <div className=\"child4\">\r\n                                <p className=\"text pointer\">{ownerName}</p>\r\n                            </div>\r\n                            <div className=\"child5\">\r\n                                <p className=\"text pointer\">{propertyType === 0 ? \"3BHK\" : \"2BHK\"}</p>\r\n                            </div>\r\n                            <div className=\"child6\">\r\n                                <Link to={'/flat/edit/' + id} onClick={(e) => e.stopPropagation()}>\r\n                                    <img src={pencil_black}\r\n                                        alt={\"edit\"}\r\n                                        className=\"icon pointer\"\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        </div >\r\n                    )\r\n                })\r\n            ]\r\n        } else {\r\n            return <NoData />;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"projectId\">\r\n            <div className=\"projectId__header\">\r\n                <div className=\"projectId__body--heading\">\r\n                    <Search\r\n                        setSearchText={setSearchText}\r\n                        searchText={searchText}\r\n                        placeholder=\"Search Flats\"\r\n                    />\r\n                </div>\r\n                <div className=\"projectId__header--filter\">\r\n                    <Link to=\"/flat/add\" className=\"projectId__header--filter--button\" >Add Flat</Link>\r\n                    <button onClick={(e) => { e.stopPropagation(); return handleExportOpen() }} className=\"projectId__header--filter--button\" >Export Excel</button>\r\n                    <button onClick={(e) => { e.stopPropagation(); return handleImportOpen() }} className=\"projectId__header--filter--button\" >Import Excel</button>\r\n                </div>\r\n            </div>\r\n            <ExportExcel\r\n                projectId={project?.id}\r\n                open={exportOpen}\r\n                handleOpen={handleExportOpen}\r\n                handleClose={handleExportClose}\r\n            />\r\n            <ImportExcel\r\n                projectId={project?.id}\r\n                open={importOpen}\r\n                handleOpen={handleImportOpen}\r\n                handleClose={handleImportClose}\r\n                setLoadFlats={setLoadFlats}\r\n            />\r\n            <div className=\"projectId__body\">\r\n                {project ?\r\n                    <div className=\"projectId__body--header\">\r\n                        <div className=\"projectId__body--header-name\">\r\n                            <h1><Link to={\"/project/\" + projectId}><b>{project?.name}</b></Link></h1>\r\n                        </div>\r\n                        <div className=\"projectId__body--header-details\">\r\n                            <h3><b>Total No of Flats:</b> {flats?.length}</h3>\r\n                            <h3><b>Number of Occupied Flats:</b> {flats?.length}</h3>\r\n                            <h3><b>Number of vacant Flats: 0</b></h3><br />\r\n                        </div>\r\n                    </div>\r\n                    : ''}\r\n                <div key={0} className=\"parentGrid gridHeader\">\r\n                    <div className=\"child1\">\r\n                        <p className=\"text pointer\">Flat No.</p>\r\n                    </div>\r\n                    <div className=\"child2\">\r\n                        <p className=\"text pointer\">Block No.</p>\r\n                    </div>\r\n                    <div className=\"child3\">\r\n                        <p className=\"text pointer\">Resident Name</p>\r\n                    </div>\r\n                    <div className=\"child4\">\r\n                        <p className=\"text pointer\">Owner Name</p>\r\n                    </div>\r\n                    <div className=\"child5\">\r\n                        <p className=\"text pointer\">Property Type</p>\r\n                    </div>\r\n                    <div className=\"child6\">\r\n                        <p className=\"text pointer\">Edit</p>\r\n                    </div>\r\n                </div>\r\n                {loading ? <Loading /> : <div className=\"projectGrid\">{renderFlats()}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project;\r\n","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\FileUploader.js",["159"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\project\\project.js",["160","161"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\pages\\flat\\flatById.js",["162","163","164","165","166"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyTextInput.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\index.js",["167"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Auth.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\error\\errorContext.js",["168"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Navbar.js",["169"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\FormError.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\AddProject.js",["170","171","172","173","174","175","176","177"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ExportExcel.js",["178","179","180"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Spinner from './Spinner';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { Link } from 'react-router-dom';\r\nimport { useGet, usePost } from \"../utils/hooks\";\r\n\r\nimport axios from 'axios';\r\nimport config from '../config';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        color: '#637390',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n        fontSize: `18px`\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    error: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        //border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modalHeading: {\r\n        textAlign: 'center'\r\n    },\r\n    exportInput: {\r\n    },\r\n    downloadBtn: {\r\n        backgroundColor: '#637390',\r\n        border: 'none',\r\n        color: 'white',\r\n        padding: '8px 21px',\r\n        textDecoration: 'none',\r\n        fontSize: '12px',\r\n        margin: '2px',\r\n        cursor: 'pointer',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    downloadBtnDiv: {\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst ExportExcel = ({ open, handleClose, projectId }) => {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const exportExcel = (event) => {\r\n\r\n        console.log(selectedDate);\r\n        var dateString = new Date(selectedDate);\r\n        console.log(dateString);\r\n        const month = dateString.getMonth() + 1;\r\n        const year = dateString.getFullYear();\r\n\r\n        const requestObject = {\r\n            projectId: projectId,\r\n            month: month,\r\n            year: year\r\n        }\r\n\r\n        event.stopPropagation();\r\n        setLoading(true);\r\n        axios.post(`${config.restApiBase}/projects/exportCSV`,\r\n            requestObject\r\n        ).then(response => {\r\n            setLoading(false);\r\n            console.log(response);\r\n            let { data } = response;\r\n            if (data && data.meta) {\r\n                setError(\"Unable To Download Excel. Please Contact To Tech-Team\");\r\n            } else {\r\n                setError(\"\");\r\n                handleClose();\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', `Project-${month}-${year}.csv`);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                link.remove();\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setError(\"Unable To Download Excel. Please Contact To Tech-Team\");\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    //console.log(\"props\", props);\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\" className={classes.modalHeading}>Export Excel</h2>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            { !loading &&\r\n                <div id=\"simple-modal-description\" className={classes.exportInput}>\r\n                    <div>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                variant=\"inline\"\r\n                                format=\"MMM-yyyy\"\r\n                                views={[\"year\", \"month\"]}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Choose Month-Year\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change date\"\r\n                                }}\r\n                                autoOk\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    <div className={classes.downloadBtnDiv}>\r\n                        <button onClick={(e) => exportExcel(e)} className={classes.downloadBtn} >Download</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            { loading && <Spinner SpinnerText={\"Downloading...\"} />}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            {body}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ExportExcel;","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\FlatRoutes.js",["181","182"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\Search.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\NotFound.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\AddFlat.js",["183","184","185","186","187","188","189","190"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport cm from \"classnames\";\r\n\r\nimport Loading from \"../../components/Loading\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n//import './AddFlat.css'\r\n\r\n\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport MyTextInput from '../../components/customInputs/MyTextInput';\r\nimport MyCheckBox from '../../components/customInputs/MyCheckBox';\r\n\r\nimport { errorContext } from \"../contexts/error/errorContext\";\r\nimport { useProjectContext } from \"../contexts/Project\";\r\nimport AuthContext from \"../contexts/Auth\";\r\nimport { useGet, usePost, usePut } from \"../../utils/hooks\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    error: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    success: {\r\n        color: 'green',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    selectDropdown: {\r\n        color: '#495057',\r\n        border: '1px solid #ced4da',\r\n        outline: 'none',\r\n        fontSize: '14px',\r\n        padding: '10px',\r\n        borderRadius: '100px',\r\n        marginTop: '5px'\r\n    },\r\n    selectInputDiv: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n\r\n    },\r\n}));\r\n\r\nconst AddFlat = () => {\r\n    const FlatStructure = {\r\n        propertyType: -1,\r\n        residentName: \"\",\r\n        ownerName: \"\",\r\n        flatNumber: \"\",\r\n        floorNumber: \"\",\r\n        blockNumber: \"\",\r\n        area: \"\",\r\n        blockIncharge: \"\",\r\n        dateOfPossession: \"\",\r\n        meterNumber: \"\",\r\n        hasLift: true,\r\n        hasDG: true\r\n    }\r\n    const classes = useStyles();\r\n    const { flatId } = useParams();\r\n    const history = useHistory();\r\n    const errorCtx = useContext(errorContext);\r\n    const { selectedProjectId } = useProjectContext();\r\n\r\n    if (!selectedProjectId) history.push(\"/projects\");\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isReset, setIsReset] = useState(false);\r\n    const { user } = useContext(AuthContext);\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [flat, setFlat] = useState(FlatStructure);\r\n\r\n    const { run: getFlatById } = usePost(\"/flats/getFlat\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                console.log(data);\r\n                console.log(flatId);\r\n                let requiredFlat = data?.flat;\r\n                delete requiredFlat[\"CAMHistories\"];\r\n                delete requiredFlat[\"electricityHistories\"];\r\n                requiredFlat.hasDG = true;\r\n                requiredFlat.hasLift = true;\r\n                setStartDate(new Date(requiredFlat?.dateOfPossession));\r\n                console.log(\"requiredFlat\", requiredFlat);\r\n                setFlat(requiredFlat);\r\n                setLoading(false);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"PROJECT\", flatId);\r\n        if (flatId) {\r\n            console.log(\"PROJECT2\", flatId);\r\n            setLoading(true);\r\n            setIsEdit(true);\r\n            getFlatById({ flatId: flatId });\r\n        }\r\n    }, [flatId]);\r\n\r\n\r\n    const { run: CreateFlat } = usePost(\"/flats/addFlats\",\r\n        null,\r\n        {\r\n            onResolve: (data) => {\r\n                errorCtx.setSuccess(\"Flat Saved Successfully\");\r\n                setIsReset(true);\r\n                history.push(\"/project/\" + selectedProjectId);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n            }\r\n        });\r\n\r\n    const { run: UpdateFlat } = usePost(\"/flats/updateFlat\",\r\n        null,\r\n        {\r\n            onResolve: (data) => {\r\n                errorCtx.setSuccess(\"Flat Updated Successfully\");\r\n                history.push(\"/project/\" + selectedProjectId);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n            }\r\n        });\r\n\r\n    const SaveFlat = (values, setSubmitting) => {\r\n        if (isEdit) {\r\n            console.log(\"values\", values);\r\n            const updatedProjectId = values.projectId;\r\n            delete values[\"projectId\"];\r\n            values.dateOfPossession = startDate;\r\n            let updatedFlat = { projectId: updatedProjectId, flat: values };\r\n            console.log(\"Updated project\", updatedFlat);\r\n            UpdateFlat(updatedFlat);\r\n            setTimeout(() => {\r\n                setSubmitting(false);\r\n            }, 400);\r\n        } else {\r\n            //values.createdBy = user.id;\r\n            console.log(startDate);\r\n            values.dateOfPossession = startDate;\r\n            console.log(\"Save Project\", values);\r\n            let insertedProject = {\r\n                projectId: selectedProjectId,\r\n                flats: [values]\r\n            }\r\n            console.log(\"insertedProject\", insertedProject);\r\n            CreateFlat(insertedProject);\r\n            setTimeout(() => {\r\n                setSubmitting(false);\r\n            }, 400);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"ISRESET\", isReset);\r\n        if (isReset) {\r\n            setFlat(FlatStructure);\r\n        }\r\n    }, [isReset])\r\n\r\n    return (\r\n        <div className=\"project\">\r\n            <div className=\"project__header\">\r\n                <div className=\"project__body--heading\">{isEdit ? \"Edit\" : \"Add\"} Flat</div>\r\n                <div className=\"project__header--filter\">\r\n                    <Link className=\"project__header--filter--button\" to={\"/Project/\" + selectedProjectId} >View All Flats</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"project__body\">\r\n                {\r\n                    loading ? <Loading /> :\r\n                        <>\r\n                            <Formik\r\n                                enableReinitialize\r\n                                validateOnMount={true}\r\n                                initialValues={flat}\r\n                                validationSchema={Yup.object({\r\n                                    // projectsBillingInformations: Yup.object({\r\n                                    //     CAM_penalize_percentage: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     electricity_penalize_percentage: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     IFMS_balance: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     CAM_fixed_charge: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     water_charge: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     lift_charge: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     CAM_charge_multiplier: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     DG_charge_multiplier: Yup.string()\r\n                                    //         .required('Required')\r\n                                    // }),\r\n                                    //name: Yup.string()\r\n                                    //  .max(50, 'Must be 50 characters or less')\r\n                                    // .required('Required')\r\n                                    //startedOn: Yup.string()\r\n                                    //    .required('Required')\r\n                                })}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    SaveFlat(values, setSubmitting);\r\n                                }}\r\n                                onReset={() => { setStartDate(null); return FlatStructure; }}\r\n                            >\r\n                                {props => {\r\n                                    const {\r\n                                        isSubmitting,\r\n                                        setFieldValue,\r\n                                        handleChange,\r\n                                        values\r\n                                    } = props;\r\n                                    return (\r\n                                        <div className=\"project__body--content\">\r\n                                            <div className=\"project__body--contentBody\">\r\n                                                <Form className=\"ProjectForm\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"input-label\">Property Type</label>\r\n                                                            <select name=\"propertyType\" defaultValue={flat.propertyType} onChange={handleChange} className={cm(classes.selectDropdown, \"input-text\")} >\r\n                                                                <option value=\"-1\">Choose PropertyType</option>\r\n                                                                <option value=\"0\">3 BHK</option>\r\n                                                                <option value=\"1\">Villa</option>\r\n                                                                <option value=\"2\">Apartment</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"input-label\">Possession Date</label>\r\n                                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                                <KeyboardDatePicker\r\n                                                                    className=\"input-text\"\r\n                                                                    variant=\"inline\"\r\n                                                                    format=\"DD-MM-YYYY\"\r\n                                                                    margin=\"normal\"\r\n                                                                    id=\"date-picker-inline\"\r\n                                                                    name=\"dateOfPossession\"\r\n                                                                    value={startDate}\r\n                                                                    onChange={date => { setStartDate(date); }}\r\n                                                                    autoOk\r\n                                                                />\r\n                                                            </MuiPickersUtilsProvider>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Owner Name\"\r\n                                                            name=\"ownerName\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Owner Name\"\r\n                                                            className=\"input-text\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Resident Name\"\r\n                                                            name=\"residentName\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Resident Name\"\r\n                                                            className=\"input-text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Flat Number\"\r\n                                                            name=\"flatNumber\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Flat Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Floor Number\"\r\n                                                            name=\"floorNumber\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Floor Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Area\"\r\n                                                            name=\"area\"\r\n                                                            type=\"number\"\r\n                                                            placeholder=\"Area\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Block Number\"\r\n                                                            name=\"blockNumber\"\r\n                                                            type=\"Text\"\r\n                                                            placeholder=\"Block Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Block Incharge\"\r\n                                                            name=\"blockIncharge\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Block Incharge\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Meter Number\"\r\n                                                            name=\"meterNumber\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Meter Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyCheckBox name=\"hasLift\">\r\n                                                            Is Lift Present\r\n                                                        </MyCheckBox>\r\n                                                        <MyCheckBox name=\"hasDG\">\r\n                                                            Is DG Present\r\n                                                        </MyCheckBox>\r\n                                                    </div>\r\n                                                    <div className=\"row btn-group\">\r\n                                                        <button disabled={isSubmitting} className={cm(\"blue_button\", \"dbutton\", \"editUp\", \"btn\")} type=\"submit\">\r\n                                                            {isEdit ? \"Update\" : \"Save\"}\r\n                                                        </button>\r\n                                                        <button className={cm(\"grey_button\", \"dbutton\", \"btn\")} type=\"reset\">Cancel</button>\r\n                                                    </div></Form>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFlat;\r\n","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Spinner.js",["191","192"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ImportExcel.js",["193","194","195","196","197"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Spinner from './Spinner';\r\nimport FileUploader from './customInputs/FileUploader';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { Link } from 'react-router-dom';\r\nimport { useGet, usePost } from \"../utils/hooks\";\r\n\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport { FormatAlignJustify } from '@material-ui/icons';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        color: '#637390',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n        fontSize: `18px`\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    error: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    success: {\r\n        color: 'green',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        //border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modalHeading: {\r\n        textAlign: 'center'\r\n    },\r\n    exportInput: {\r\n    },\r\n    downloadBtn: {\r\n        backgroundColor: '#637390',\r\n        border: 'none',\r\n        color: 'white',\r\n        padding: '8px 21px',\r\n        textDecoration: 'none',\r\n        fontSize: '12px',\r\n        margin: '2px',\r\n        cursor: 'pointer',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    downloadBtnDiv: {\r\n        textAlign: 'center'\r\n    },\r\n    selectDropdown: {\r\n        height: '3.5rem',\r\n        color: '#495057',\r\n        border: '1px solid #ced4da',\r\n        outline: 'none',\r\n        fontSize: '14px',\r\n        padding: '5px',\r\n        borderRadius: '.25rem',\r\n        width: '100%',\r\n        marginTop: '5px'\r\n    },\r\n    selectInputDiv: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n\r\n    },\r\n}));\r\n\r\nconst ImportExcel = ({ open, handleClose, projectId, setLoadFlats }) => {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [csvType, setCsvType] = useState(-1);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const handleDateChange = (date) => setSelectedDate(date);\r\n    const onSelectFile = (event) => {\r\n        console.log(\"vent.target.files\", event.target.files[0]);\r\n        setSelectedFile(event.target.files[0]);\r\n    }\r\n\r\n    const importExcel = (event) => {\r\n        event.stopPropagation();\r\n        setSuccess(\"\");\r\n        setError(\"\");\r\n\r\n        let dateString = new Date(selectedDate);\r\n        const month = dateString.getMonth() + 1;\r\n        const year = dateString.getFullYear();\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"csv\", selectedFile);\r\n        formData.append(\"projectId\", projectId);\r\n        formData.append(\"month\", month);\r\n        formData.append(\"year\", year);\r\n        formData.append(\"csvType\", csvType);\r\n        console.log(formData);\r\n        if (csvType == \"-1\") {\r\n            setError(\"Please Choose Billing Type\");\r\n        } else if (!selectedFile) {\r\n            setError(\"Please Choose File\");\r\n        } else {\r\n            setLoading(true);\r\n            axios.post(`${config.restApiBase}/projects/importCSV`, formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                }\r\n            ).then(response => {\r\n                console.log(\"Response\", response);\r\n                setLoading(false);\r\n                let { data } = response;\r\n                if (!(data && data.meta))\r\n                    setError(\"Unable to import excel\");\r\n                if (data.meta.code >= 200 && data.meta.code < 300) {\r\n                    setSelectedDate(new Date());\r\n                    setSelectedFile(null);\r\n                    setCsvType(-1)\r\n                    setSuccess(\"Import Successfully\");\r\n                    setLoadFlats(true);\r\n                } else {\r\n                    setError(\"Unable to import excel\");\r\n                }\r\n            }).catch((error) => {\r\n                setLoading(false);\r\n                setError(\"Unable to import excel\");\r\n                console.log(error);\r\n            });\r\n        }\r\n    };\r\n\r\n    //console.log(\"props\", props);\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\" className={classes.modalHeading}>Import Excel</h2>\r\n            {success && <div className={classes.success}>{success}</div>}\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            { !loading &&\r\n                <div id=\"simple-modal-description\" className={classes.exportInput}>\r\n                    <div className={classes.selectInputDiv}>\r\n                        <select onChange={(e) => setCsvType(e.target.value)} className={classes.selectDropdown}>\r\n                            <option value=\"-1\">Choose Billing</option>\r\n                            <option value=\"0\">CAM Billling</option>\r\n                            <option value=\"1\">Electricity Billling</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                variant=\"inline\"\r\n                                format=\"MMM-yyyy\"\r\n                                views={[\"year\", \"month\"]}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Choose Month-Year\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change date\"\r\n                                }}\r\n                                autoOk\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    <FileUploader\r\n                        selectedFile={selectedFile}\r\n                        onSelectFile={onSelectFile}\r\n                    />\r\n                    <div className={classes.downloadBtnDiv}>\r\n                        <button onClick={(e) => importExcel(e)} className={classes.downloadBtn} >Upload</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {loading && <Spinner SpinnerText={\"Uploading...\"} />}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            {body}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ImportExcel;","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\ProjectRoutes.js",["198"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\func.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyCheckBox.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\Flat.js",["199","200"],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":21,"column":21,"nodeType":"207","messageId":"208","endLine":21,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":82,"column":64,"nodeType":"211","messageId":"212","endLine":82,"endColumn":66},{"ruleId":"213","severity":1,"message":"214","line":115,"column":8,"nodeType":"215","endLine":115,"endColumn":21,"suggestions":"216"},{"ruleId":"205","severity":1,"message":"217","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"205","severity":1,"message":"218","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"219","line":3,"column":27,"nodeType":"207","messageId":"208","endLine":3,"endColumn":33},{"ruleId":"205","severity":1,"message":"220","line":18,"column":19,"nodeType":"207","messageId":"208","endLine":18,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":24,"column":81,"nodeType":"211","messageId":"212","endLine":24,"endColumn":83},{"ruleId":"209","severity":1,"message":"210","line":25,"column":149,"nodeType":"211","messageId":"212","endLine":25,"endColumn":151},{"ruleId":"213","severity":1,"message":"221","line":41,"column":8,"nodeType":"215","endLine":41,"endColumn":27,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"210","line":76,"column":39,"nodeType":"211","messageId":"212","endLine":76,"endColumn":41},{"ruleId":"205","severity":1,"message":"218","line":8,"column":10,"nodeType":"207","messageId":"208","endLine":8,"endColumn":16},{"ruleId":"205","severity":1,"message":"219","line":8,"column":27,"nodeType":"207","messageId":"208","endLine":8,"endColumn":33},{"ruleId":"205","severity":1,"message":"223","line":27,"column":13,"nodeType":"207","messageId":"208","endLine":27,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":49,"column":81,"nodeType":"211","messageId":"212","endLine":49,"endColumn":83},{"ruleId":"209","severity":1,"message":"210","line":50,"column":149,"nodeType":"211","messageId":"212","endLine":50,"endColumn":151},{"ruleId":"213","severity":1,"message":"224","line":81,"column":8,"nodeType":"215","endLine":81,"endColumn":19,"suggestions":"225"},{"ruleId":"213","severity":1,"message":"226","line":88,"column":8,"nodeType":"215","endLine":88,"endColumn":19,"suggestions":"227"},{"ruleId":"213","severity":1,"message":"228","line":93,"column":8,"nodeType":"215","endLine":93,"endColumn":20,"suggestions":"229"},{"ruleId":"209","severity":1,"message":"210","line":99,"column":25,"nodeType":"211","messageId":"212","endLine":99,"endColumn":27},{"ruleId":"205","severity":1,"message":"230","line":115,"column":11,"nodeType":"207","messageId":"208","endLine":115,"endColumn":23},{"ruleId":"205","severity":1,"message":"231","line":120,"column":95,"nodeType":"207","messageId":"208","endLine":120,"endColumn":104},{"ruleId":"205","severity":1,"message":"232","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"233","line":32,"column":8,"nodeType":"215","endLine":32,"endColumn":10,"suggestions":"234"},{"ruleId":"213","severity":1,"message":"235","line":37,"column":8,"nodeType":"215","endLine":37,"endColumn":21,"suggestions":"236"},{"ruleId":"205","severity":1,"message":"237","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":10},{"ruleId":"205","severity":1,"message":"238","line":11,"column":13,"nodeType":"207","messageId":"208","endLine":11,"endColumn":20},{"ruleId":"205","severity":1,"message":"239","line":11,"column":37,"nodeType":"207","messageId":"208","endLine":11,"endColumn":46},{"ruleId":"205","severity":1,"message":"240","line":11,"column":53,"nodeType":"207","messageId":"208","endLine":11,"endColumn":61},{"ruleId":"213","severity":1,"message":"241","line":57,"column":8,"nodeType":"215","endLine":57,"endColumn":21,"suggestions":"242"},{"ruleId":"205","severity":1,"message":"243","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":16},{"ruleId":"205","severity":1,"message":"244","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"246","line":20,"column":29,"nodeType":"247","endLine":20,"endColumn":51},{"ruleId":"205","severity":1,"message":"248","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":14},{"ruleId":"205","severity":1,"message":"249","line":10,"column":8,"nodeType":"207","messageId":"208","endLine":10,"endColumn":20},{"ruleId":"205","severity":1,"message":"218","line":24,"column":10,"nodeType":"207","messageId":"208","endLine":24,"endColumn":16},{"ruleId":"205","severity":1,"message":"219","line":24,"column":27,"nodeType":"207","messageId":"208","endLine":24,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":60,"column":81,"nodeType":"211","messageId":"212","endLine":60,"endColumn":83},{"ruleId":"209","severity":1,"message":"210","line":62,"column":149,"nodeType":"211","messageId":"212","endLine":62,"endColumn":151},{"ruleId":"213","severity":1,"message":"221","line":82,"column":8,"nodeType":"215","endLine":82,"endColumn":19,"suggestions":"250"},{"ruleId":"213","severity":1,"message":"251","line":140,"column":8,"nodeType":"215","endLine":140,"endColumn":17,"suggestions":"252"},{"ruleId":"205","severity":1,"message":"253","line":8,"column":10,"nodeType":"207","messageId":"208","endLine":8,"endColumn":14},{"ruleId":"205","severity":1,"message":"218","line":9,"column":10,"nodeType":"207","messageId":"208","endLine":9,"endColumn":16},{"ruleId":"205","severity":1,"message":"254","line":9,"column":18,"nodeType":"207","messageId":"208","endLine":9,"endColumn":25},{"ruleId":"205","severity":1,"message":"255","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":16},{"ruleId":"205","severity":1,"message":"256","line":9,"column":17,"nodeType":"207","messageId":"208","endLine":9,"endColumn":20},{"ruleId":"205","severity":1,"message":"257","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":18},{"ruleId":"205","severity":1,"message":"218","line":28,"column":10,"nodeType":"207","messageId":"208","endLine":28,"endColumn":16},{"ruleId":"205","severity":1,"message":"219","line":28,"column":27,"nodeType":"207","messageId":"208","endLine":28,"endColumn":33},{"ruleId":"205","severity":1,"message":"223","line":87,"column":13,"nodeType":"207","messageId":"208","endLine":87,"endColumn":17},{"ruleId":"213","severity":1,"message":"258","line":121,"column":8,"nodeType":"215","endLine":121,"endColumn":16,"suggestions":"259"},{"ruleId":"213","severity":1,"message":"260","line":183,"column":8,"nodeType":"215","endLine":183,"endColumn":17,"suggestions":"261"},{"ruleId":"205","severity":1,"message":"262","line":234,"column":41,"nodeType":"207","messageId":"208","endLine":234,"endColumn":54},{"ruleId":"205","severity":1,"message":"263","line":236,"column":41,"nodeType":"207","messageId":"208","endLine":236,"endColumn":47},{"ruleId":"205","severity":1,"message":"232","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"265","line":21,"column":13,"nodeType":"247","endLine":21,"endColumn":65},{"ruleId":"205","severity":1,"message":"253","line":9,"column":10,"nodeType":"207","messageId":"208","endLine":9,"endColumn":14},{"ruleId":"205","severity":1,"message":"218","line":10,"column":10,"nodeType":"207","messageId":"208","endLine":10,"endColumn":16},{"ruleId":"205","severity":1,"message":"254","line":10,"column":18,"nodeType":"207","messageId":"208","endLine":10,"endColumn":25},{"ruleId":"205","severity":1,"message":"266","line":14,"column":10,"nodeType":"207","messageId":"208","endLine":14,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":119,"column":21,"nodeType":"211","messageId":"212","endLine":119,"endColumn":23},{"ruleId":"205","severity":1,"message":"256","line":8,"column":17,"nodeType":"207","messageId":"208","endLine":8,"endColumn":20},{"ruleId":"205","severity":1,"message":"238","line":9,"column":11,"nodeType":"207","messageId":"208","endLine":9,"endColumn":18},{"ruleId":"213","severity":1,"message":"241","line":55,"column":8,"nodeType":"215","endLine":55,"endColumn":21,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'setNewUser' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTeamList'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'useHistory' is defined but never used.","'useGet' is defined but never used.","'usePut' is defined but never used.","'logout' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProjectById'. Either include it or remove the dependency array.",["271"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFlatsList', 'getProjectById', and 'setSelectedProjectId'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has missing dependencies: 'getFlatsList' and 'projectId'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'searchFlats'. Either include it or remove the dependency array.",["274"],"'goToEditFlat' is assigned a value but never used.","'projectId' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setSelectedProjectId'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has a missing dependency: 'getProjectList'. Either include it or remove the dependency array.",["276"],"'cm' is defined but never used.","'history' is assigned a value but never used.","'matchPath' is assigned a value but never used.","'matchUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCamDetails', 'getElectricityDetails', and 'getFlatDetails'. Either include them or remove the dependency array.",["277"],"'HomePage' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'search' is defined but never used.","'pencil_black' is defined but never used.",["278"],"React Hook useEffect has a missing dependency: 'projectStructure'. Either include it or remove the dependency array.",["279"],"'Link' is defined but never used.","'usePost' is defined but never used.","'NotFound' is defined but never used.","'url' is assigned a value but never used.","'DatePicker' is defined but never used.","React Hook useEffect has a missing dependency: 'getFlatById'. Either include it or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'FlatStructure'. Either include it or remove the dependency array.",["281"],"'setFieldValue' is assigned a value but never used.","'values' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FormatAlignJustify' is defined but never used.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"297","fix":"307"},"Update the dependencies array to be: [loadGetData, updateTeamList]",{"range":"308","text":"309"},"Update the dependencies array to be: [getProjectById, selectedProjectId]",{"range":"310","text":"311"},"Update the dependencies array to be: [getFlatsList, getProjectById, projectId, setSelectedProjectId]",{"range":"312","text":"313"},"Update the dependencies array to be: [getFlatsList, loadFlats, projectId]",{"range":"314","text":"315"},"Update the dependencies array to be: [searchFlats, searchText]",{"range":"316","text":"317"},"Update the dependencies array to be: [setSelectedProjectId]",{"range":"318","text":"319"},"Update the dependencies array to be: [getProjectList, loadGetData]",{"range":"320","text":"321"},"Update the dependencies array to be: [getCamDetails, getElectricityDetails, getFlatDetails, loadGetData]",{"range":"322","text":"323"},"Update the dependencies array to be: [getProjectById, projectId]",{"range":"324","text":"325"},"Update the dependencies array to be: [isReset, projectStructure]",{"range":"326","text":"327"},"Update the dependencies array to be: [flatId, getFlatById]",{"range":"328","text":"329"},"Update the dependencies array to be: [FlatStructure, isReset]",{"range":"330","text":"331"},{"range":"332","text":"323"},[3640,3653],"[loadGetData, updateTeamList]",[1722,1741],"[getProjectById, selectedProjectId]",[3136,3147],"[getFlatsList, getProjectById, projectId, setSelectedProjectId]",[3326,3337],"[getFlatsList, loadFlats, projectId]",[3424,3436],"[searchFlats, searchText]",[1152,1154],"[setSelectedProjectId]",[1244,1257],"[getProjectList, loadGetData]",[2043,2056],"[getCamDetails, getElectricityDetails, getFlatDetails, loadGetData]",[2796,2807],"[getProjectById, projectId]",[4749,4758],"[isReset, projectStructure]",[3725,3733],"[flatId, getFlatById]",[5747,5756],"[FlatStructure, isReset]",[1859,1872]]