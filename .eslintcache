[{"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfAuth.js":"1","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Loading.js":"2","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\object.js":"3","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Project.js":"4","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfProjectSelected.js":"5","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Sidebar.js":"6","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\Project.js":"7","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\FileUploader.js":"8","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyTextInput.js":"9","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\index.js":"10","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Auth.js":"11","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\error\\errorContext.js":"12","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Navbar.js":"13","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\FormError.js":"14","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\AddProject.js":"15","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ExportExcel.js":"16","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\FlatRoutes.js":"17","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\Search.js":"18","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\NotFound.js":"19","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\AddFlat.js":"20","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Spinner.js":"21","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ImportExcel.js":"22","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\ProjectRoutes.js":"23","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\func.js":"24","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyCheckBox.js":"25","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\Flat.js":"26","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\config.js":"27","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\NoData.js":"28","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\billing\\Billling.js":"29","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\BillingRoutes.js":"30","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\grid\\colmodels\\TransactionsModels.js":"31","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\grid\\TransactionGrid.js":"32","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\billing\\ViewBills.js":"33"},{"size":282,"mtime":1614443209962,"results":"34","hashOfConfig":"35"},{"size":295,"mtime":1611558876000,"results":"36","hashOfConfig":"35"},{"size":1351,"mtime":1611558876000,"results":"37","hashOfConfig":"35"},{"size":1261,"mtime":1614353340846,"results":"38","hashOfConfig":"35"},{"size":318,"mtime":1614443226752,"results":"39","hashOfConfig":"35"},{"size":6385,"mtime":1615013054909,"results":"40","hashOfConfig":"35"},{"size":9475,"mtime":1614649421525,"results":"41","hashOfConfig":"35"},{"size":2472,"mtime":1614387776313,"results":"42","hashOfConfig":"35"},{"size":827,"mtime":1615860561216,"results":"43","hashOfConfig":"35"},{"size":1303,"mtime":1614173247751,"results":"44","hashOfConfig":"35"},{"size":1193,"mtime":1611558876000,"results":"45","hashOfConfig":"35"},{"size":2448,"mtime":1611558876000,"results":"46","hashOfConfig":"35"},{"size":1685,"mtime":1614352733511,"results":"47","hashOfConfig":"35"},{"size":967,"mtime":1611558876000,"results":"48","hashOfConfig":"35"},{"size":15885,"mtime":1614689476613,"results":"49","hashOfConfig":"35"},{"size":5255,"mtime":1614684902502,"results":"50","hashOfConfig":"35"},{"size":727,"mtime":1614618637642,"results":"51","hashOfConfig":"35"},{"size":662,"mtime":1614070258081,"results":"52","hashOfConfig":"35"},{"size":89,"mtime":1614443275850,"results":"53","hashOfConfig":"35"},{"size":17723,"mtime":1614647694407,"results":"54","hashOfConfig":"35"},{"size":653,"mtime":1614352391939,"results":"55","hashOfConfig":"35"},{"size":7340,"mtime":1614684924773,"results":"56","hashOfConfig":"35"},{"size":609,"mtime":1614440907242,"results":"57","hashOfConfig":"35"},{"size":293,"mtime":1614440898591,"results":"58","hashOfConfig":"35"},{"size":968,"mtime":1614441402181,"results":"59","hashOfConfig":"35"},{"size":16874,"mtime":1614688853000,"results":"60","hashOfConfig":"35"},{"size":848,"mtime":1615860526770,"results":"61","hashOfConfig":"35"},{"size":235,"mtime":1611558876000,"results":"62","hashOfConfig":"35"},{"size":16100,"mtime":1615013467011,"results":"63","hashOfConfig":"35"},{"size":515,"mtime":1615008782000,"results":"64","hashOfConfig":"35"},{"size":660,"mtime":1616300583993,"results":"65","hashOfConfig":"35"},{"size":797,"mtime":1616300620003,"results":"66","hashOfConfig":"35"},{"size":18076,"mtime":1616840710345,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1acfzf9",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfAuth.js",[],["147","148"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Loading.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\object.js",[],["149","150"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Project.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\IfProjectSelected.js",[],["151","152"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Sidebar.js",["153","154","155","156","157","158","159","160"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\Project.js",["161","162","163","164","165","166","167","168","169","170","171"],"\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport cm from \"classnames\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGet, usePost, usePut } from \"../../utils/hooks\";\r\nimport { errorContext } from \"../../components/contexts/error/errorContext\";\r\nimport AuthContext from \"../../components/contexts/Auth\";\r\nimport { useProjectActionsContext } from '../../components/contexts/Project';\r\n\r\nimport Search from '../customInputs/Search';\r\nimport ExportExcel from '../ExportExcel';\r\nimport ImportExcel from '../ImportExcel';\r\nimport Loading from '../Loading';\r\nimport NoData from \"../NoData\";\r\nimport pencil_black from \"../../img/pencil_black.svg\";\r\n\r\nimport './Project.css'\r\n\r\n\r\nconst Project = () => {\r\n    let history = useHistory();\r\n    const { projectId } = useParams();\r\n\r\n    const { user } = useContext(AuthContext);\r\n    const errorCtx = useContext(errorContext);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadFlats, setLoadFlats] = useState(false);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [project, setProject] = useState(null);\r\n    const [flats, setFlats] = useState(null);\r\n    const [oldFlats, setOldFlats] = useState(null);\r\n    const [exportOpen, setExportOpen] = useState(false);\r\n    const [importOpen, setImportOpen] = useState(false);\r\n    const setSelectedProjectId = useProjectActionsContext();\r\n\r\n    const handleExportOpen = () => setExportOpen(true);\r\n    const handleExportClose = () => setExportOpen(false);\r\n    const handleImportOpen = () => setImportOpen(true);\r\n    const handleImportClose = () => setImportOpen(false);\r\n\r\n    const { run: getProjectById } = usePost(\"/projects/GetProject\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setLoadFlats(false);\r\n                let requiredProject = data?.projects.find(project => project.id == projectId);\r\n                requiredProject.projectsBillingInformations = requiredProject?.projectsBillingInformations?.find(billingInfo => billingInfo.proj_id == projectId);\r\n                setProject(requiredProject);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n            }\r\n        });\r\n    const { run: getFlatsList } = usePost(\"/flats\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setFlats(data.flats);\r\n                setOldFlats(data.flats);\r\n                setLoading(false);\r\n                // if (data && data.flats && data.flats[0] && data.flats[0].project)\r\n                //     setProjectName(data.flats[0].project.name);\r\n                // setTotalNoOfFlat(data.flats.length);\r\n                // setLoading(false);\r\n            },\r\n            onReject: (error) => {\r\n            }\r\n        });\r\n\r\n\r\n    useEffect(() => {\r\n        if (projectId) {\r\n            setLoading(true);\r\n            setSelectedProjectId(projectId);\r\n            getProjectById({ projId: projectId });\r\n            getFlatsList({ projectId: projectId });\r\n        }\r\n    }, [projectId]);\r\n\r\n    useEffect(() => {\r\n        if (projectId && loadFlats) {\r\n            getFlatsList({ projectId: projectId });\r\n        }\r\n    }, [loadFlats]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        searchFlats();\r\n    }, [searchText]);\r\n\r\n    const searchFlats = () => {\r\n        const searchValue = searchText;\r\n        let newFlats = [];\r\n        if (searchValue == \"\") {\r\n            newFlats = oldFlats\r\n        } else {\r\n            newFlats = oldFlats.filter(obj => {\r\n                return obj.residentName.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.ownerName.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.flatNumber.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.blockIncharge.toUpperCase().includes(searchValue.toUpperCase())\r\n                    || obj.meterNumber.toUpperCase().includes(searchValue.toUpperCase());\r\n            });\r\n        }\r\n        setFlats(newFlats);\r\n        setLoading(false);\r\n    }\r\n    const goToFlat = (id) => { history.push(\"/flats/\" + id) }\r\n    const goToEditFlat = (id) => { history.push(\"/flat/edit/\" + id) }\r\n    const renderFlats = () => {\r\n        if (flats && flats.length > 0) {\r\n            return [\r\n                flats.map(flat => {\r\n                    let { id, residentName, ownerName, propertyType, flatNumber, blockNumber, projectId } = flat;\r\n                    return (\r\n                        <div key={id} className={cm(\"parentGrid\", { \"parentGrid__active\": false })}\r\n                            onClick={(e) => goToFlat(id)}\r\n                        >\r\n                            <div className=\"child1 \">\r\n                                <p className=\"text pointer\">{flatNumber}</p>\r\n                            </div>\r\n                            <div className=\"child2\">\r\n                                <p className=\"text pointer\">{blockNumber}</p>\r\n                            </div>\r\n                            <div className=\"child3\">\r\n                                <p className=\"text pointer\">{residentName}</p>\r\n                            </div>\r\n                            <div className=\"child4\">\r\n                                <p className=\"text pointer\">{ownerName}</p>\r\n                            </div>\r\n                            <div className=\"child5\">\r\n                                <p className=\"text pointer\">{propertyType === 0 ? \"3BHK\" : \"Others\"}</p>\r\n                            </div>\r\n                            <div className=\"child6\">\r\n                                <Link to={'/flat/edit/' + id} onClick={(e) => e.stopPropagation()}>\r\n                                    <img src={pencil_black}\r\n                                        alt={\"edit\"}\r\n                                        className=\"icon pointer\"\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        </div >\r\n                    )\r\n                })\r\n            ]\r\n        } else {\r\n            return <NoData />;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"projectId\">\r\n            <div className=\"projectId__header\">\r\n                <div className=\"projectId__body--heading\">\r\n                    <Search\r\n                        setSearchText={setSearchText}\r\n                        searchText={searchText}\r\n                        placeholder=\"Search Flats\"\r\n                    />\r\n                </div>\r\n                <div className=\"projectId__header--filter\">\r\n                    <Link to=\"/flat/add\" className=\"projectId__header--filter--button\" >Add Flat</Link>\r\n                    <button onClick={(e) => { e.stopPropagation(); return handleExportOpen() }} className=\"projectId__header--filter--button\" >Export Excel</button>\r\n                    <button onClick={(e) => { e.stopPropagation(); return handleImportOpen() }} className=\"projectId__header--filter--button\" >Import Excel</button>\r\n                </div>\r\n            </div>\r\n            <ExportExcel\r\n                projectId={project?.id}\r\n                open={exportOpen}\r\n                handleOpen={handleExportOpen}\r\n                handleClose={handleExportClose}\r\n            />\r\n            <ImportExcel\r\n                projectId={project?.id}\r\n                open={importOpen}\r\n                handleOpen={handleImportOpen}\r\n                handleClose={handleImportClose}\r\n                setLoadFlats={setLoadFlats}\r\n            />\r\n            <div className=\"projectId__body\">\r\n                {project ?\r\n                    <div className=\"projectId__body--header\">\r\n                        <div className=\"projectId__body--header-name\">\r\n                            <h1><Link to={\"/project/\" + projectId}><b>{project?.name}</b></Link></h1>\r\n                        </div>\r\n                        <div className=\"projectId__body--header-details\">\r\n                            <h3><b>Total No of Flats:</b> {flats?.length}</h3>\r\n                            <h3><b>Number of Occupied Flats:</b> {flats?.length}</h3>\r\n                            <h3><b>Number of vacant Flats: 0</b></h3><br />\r\n                        </div>\r\n                    </div>\r\n                    : ''}\r\n                <div key={0} className=\"parentGrid gridHeader\">\r\n                    <div className=\"child1\">\r\n                        <p className=\"text pointer\">Flat No.</p>\r\n                    </div>\r\n                    <div className=\"child2\">\r\n                        <p className=\"text pointer\">Block No.</p>\r\n                    </div>\r\n                    <div className=\"child3\">\r\n                        <p className=\"text pointer\">Resident Name</p>\r\n                    </div>\r\n                    <div className=\"child4\">\r\n                        <p className=\"text pointer\">Owner Name</p>\r\n                    </div>\r\n                    <div className=\"child5\">\r\n                        <p className=\"text pointer\">Property Type</p>\r\n                    </div>\r\n                    <div className=\"child6\">\r\n                        <p className=\"text pointer\">Edit</p>\r\n                    </div>\r\n                </div>\r\n                {loading ? <Loading /> : <div className=\"projectGrid\">{renderFlats()}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project;\r\n",["172","173"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\FileUploader.js",["174"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    customFile: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        width: '100%',\r\n        height: 'calc(1.5em + .75rem + 2px)',\r\n        marginBottom: '0'\r\n    },\r\n    customFileInput: {\r\n        position: 'relative',\r\n        zIndex: '2',\r\n        width: '100%',\r\n        height: 'calc(1.5em + .75rem + 2px)',\r\n        margin: '0',\r\n        opacity: '0'\r\n    },\r\n    customSelectedFile: {\r\n        textAlign: 'center',\r\n        color: '#495057',\r\n        fontSize: '16px',\r\n        marginBottom: '10px'\r\n    },\r\n    customFileLabel: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '0',\r\n        left: '0',\r\n        zIndex: '1',\r\n        height: 'calc(1.5em + .75rem + 2px)',\r\n        padding: '.375rem .75rem',\r\n        fontWeight: '400',\r\n        lineHeight: '1.5',\r\n        color: '#495057',\r\n        backgroundColor: '#fff',\r\n        border: '1px solid #ced4da',\r\n        borderRadius: '.25rem',\r\n        \"&::after\": {\r\n            position: 'absolute',\r\n            top: '0',\r\n            right: '0',\r\n            bottom: '0',\r\n            zIndex: '3',\r\n            display: 'block',\r\n            height: 'calc(1.5em + .75rem)',\r\n            padding: '.375rem .75rem',\r\n            lineHeight: '1.5',\r\n            color: '#495057',\r\n            content: '\"Browse\"',\r\n            backgroundColor: '#e9ecef',\r\n            borderLeft: 'inherit',\r\n            borderRadius: '0 .25rem .25rem 0'\r\n        }\r\n    }\r\n}));\r\n\r\nconst FileUploader = ({ onSelectFile, selectedFile }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <div className={classes.customFile}>\r\n                <input type=\"file\"\r\n                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                    id=\"customFile\"\r\n                    className={classes.customFileInput}\r\n                    onChange={onSelectFile}\r\n                />\r\n                <label\r\n                    className={classes.customFileLabel}\r\n                    htmlFor=\"customFile\"\r\n                >\r\n                    Choose file\r\n                        </label>\r\n            </div>\r\n            <div className={classes.customSelectedFile}>{selectedFile?.name}</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FileUploader;","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyTextInput.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\index.js",["175"],"//#region Modules\n\n//#region 3rd party app\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n//#endregion\n\n//#region Inbuilt\nimport \"./index.css\";\nimport \"./App.scss\";\n//Pages\nimport HomePage from \"./pages/HomePage\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport { AuthContextProvider } from \"./components/contexts/Auth\";\nimport ErrorContext from \"./components/contexts/error/errorContext\";\n//#endregion\n\n//#endregion\n\nconst providers = [[AuthContextProvider, {}]];\n\nconst combineProviders = (providers) => {\n  const RootProvider = ({ children }) =>\n    providers.reduceRight(\n      (tree, [Provider, props]) => <Provider {...props}>{tree}</Provider>,\n      children\n    );\n  return RootProvider;\n};\n\nconst RootProvider = combineProviders(providers);\n\nconst App = () => (\n  <RootProvider>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <ErrorContext>\n          <Route path=\"/\" component={Dashboard} />\n          <Route exact={true} path=\"/login\" component={Login} />\n          {/* <Route component={HomePage} />*/}\n        </ErrorContext>\n      </Switch>\n    </BrowserRouter>\n  </RootProvider>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\Auth.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\contexts\\error\\errorContext.js",["176"],"import React, {useContext, useState} from \"react\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport \"./error.scss\";\n// import {userContext} from \"../user/userContext\";\n\nexport const errorContext = React.createContext({});\n\nconst ErrorContext = (props) => {\n  // const userCtx = useContext(userContext)\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [warning, setWarning] = useState(null);\n  return (\n    <errorContext.Provider\n      value={{\n        setError: (error) => {\n          setError(error);\n        },\n        setSuccess: (msg,props={}) => {\n          setSuccess({msg,...props});\n        },\n        setWarning: (msg, onConfirm, onCancel) => {\n          setWarning({\n            msg,\n            onCancel,\n            onConfirm,\n          });\n        },\n      }}\n    >\n      {error && (\n        <div className={\"errorDialog\"}>\n          <SweetAlert\n            warning\n            confirmBtnText={error.code in [4025,403]?\"Logout\":\"OK\"}\n            onConfirm={() => {\n                if(error.code in [4025,403]){\n                    // userCtx.logout();\n                }\n                setError(null)\n            }}\n            title=\"Error\"\n            focusConfirmBtn\n          >\n               <div className=\"message\">\n            {error.message}\n            </div>\n          </SweetAlert>\n        </div>\n      )}\n      {success && (\n        <div className={\"successDialog\"}>\n          <SweetAlert\n            success\n            title=\"Success!\"\n            onConfirm={() => setSuccess(null)}\n          >\n               <div className=\"message\">\n                            {success.msg}\n                            </div>\n          </SweetAlert>\n        </div>\n      )}\n      {warning && (\n        <div className={\"warningDialog\"}>\n          <SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Confirm\"\n            title=\"Are you sure?\"\n            onConfirm={() => {\n              warning.onConfirm();\n              setWarning(null);\n            }}\n            onCancel={() => {\n              warning.onCancel();\n              setWarning(null);\n            }}\n            focusCancelBtn\n          >\n            \n            <div className=\"message\">\n             {warning.msg}\n             </div>\n          </SweetAlert>\n        </div>\n      )}\n      {props.children}\n    </errorContext.Provider>\n  );\n};\n\nexport default ErrorContext;\n","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Navbar.js",["177"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\FormError.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\project\\AddProject.js",["178","179","180","181","182","183","184","185"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ExportExcel.js",["186","187","188"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Spinner from './Spinner';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { Link } from 'react-router-dom';\r\nimport { useGet, usePost } from \"../utils/hooks\";\r\n\r\nimport axios from 'axios';\r\nimport config from '../config';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        color: '#637390',\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n        fontSize: `18px`\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    error: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        //border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    modalHeading: {\r\n        textAlign: 'center'\r\n    },\r\n    exportInput: {\r\n    },\r\n    downloadBtn: {\r\n        backgroundColor: '#637390',\r\n        border: 'none',\r\n        color: 'white',\r\n        padding: '8px 21px',\r\n        textDecoration: 'none',\r\n        fontSize: '12px',\r\n        margin: '2px',\r\n        cursor: 'pointer',\r\n        borderRadius: '10px',\r\n        outline: 'none'\r\n    },\r\n    downloadBtnDiv: {\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst ExportExcel = ({ open, handleClose, projectId }) => {\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const exportExcel = (event) => {\r\n\r\n        var dateString = new Date(selectedDate);\r\n        const month = dateString.getMonth() + 1;\r\n        const year = dateString.getFullYear();\r\n\r\n        const requestObject = {\r\n            projectId: projectId,\r\n            month: month,\r\n            year: year\r\n        }\r\n\r\n        event.stopPropagation();\r\n        setLoading(true);\r\n        axios.post(`${config.restApiBase}/projects/exportCSV`,\r\n            requestObject\r\n        ).then(response => {\r\n            setLoading(false);\r\n            let { data } = response;\r\n            if (data && data.meta) {\r\n                setError(\"Unable To Download Excel. Please Contact To Tech-Team\");\r\n            } else {\r\n                setError(\"\");\r\n                handleClose();\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', `Project-${month}-${year}.csv`);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                link.remove();\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setError(\"Unable To Download Excel. Please Contact To Tech-Team\");\r\n        });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\" className={classes.modalHeading}>Export Excel</h2>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            { !loading &&\r\n                <div id=\"simple-modal-description\" className={classes.exportInput}>\r\n                    <div>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                variant=\"inline\"\r\n                                format=\"MMM-yyyy\"\r\n                                views={[\"month\", \"year\"]}\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Choose Month-Year\"\r\n                                value={selectedDate}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    \"aria-label\": \"change date\"\r\n                                }}\r\n                                autoOk\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    <div className={classes.downloadBtnDiv}>\r\n                        <button onClick={(e) => exportExcel(e)} className={classes.downloadBtn} >Download</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            { loading && <Spinner SpinnerText={\"Downloading...\"} />}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            {body}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ExportExcel;","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\FlatRoutes.js",["189","190","191","192"],"import { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport IfProjectSelected from \"../components/IfProjectSelected\";\r\nimport flatById from \"../pages/flat/flatById\";\r\nimport AddFlat from \"../components/flat/AddFlat\";\r\nimport Flat from \"../components/flat/Flat\";\r\nimport NotFound from '../components/NotFound';\r\n\r\nconst FlatRoutes = () => {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n        <Switch>\r\n            <IfProjectSelected>\r\n                <Route exact={true} path={`${path}/add`} component={AddFlat} />\r\n                <Route exact={true} path={`${path}/edit/:flatId`} component={AddFlat} />\r\n            </IfProjectSelected>\r\n        </Switch>\r\n    );\r\n};\r\nexport default FlatRoutes;\r\n","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\Search.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\NotFound.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\AddFlat.js",["193","194","195","196","197","198","199","200"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport cm from \"classnames\";\r\n\r\nimport Loading from \"../../components/Loading\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n//import './AddFlat.css'\r\n\r\n\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport MyTextInput from '../../components/customInputs/MyTextInput';\r\nimport MyCheckBox from '../../components/customInputs/MyCheckBox';\r\n\r\nimport { errorContext } from \"../contexts/error/errorContext\";\r\nimport { useProjectContext } from \"../contexts/Project\";\r\nimport AuthContext from \"../contexts/Auth\";\r\nimport { useGet, usePost, usePut } from \"../../utils/hooks\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    error: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    success: {\r\n        color: 'green',\r\n        textAlign: 'center',\r\n        fontSize: '12px',\r\n        marginTop: '5px'\r\n    },\r\n    selectDropdown: {\r\n        color: '#495057',\r\n        border: '1px solid #ced4da',\r\n        outline: 'none',\r\n        fontSize: '14px',\r\n        padding: '10px',\r\n        borderRadius: '100px',\r\n        marginTop: '5px'\r\n    },\r\n    selectInputDiv: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n\r\n    },\r\n}));\r\n\r\nconst AddFlat = () => {\r\n    const FlatStructure = {\r\n        propertyType: -1,\r\n        residentName: \"\",\r\n        ownerName: \"\",\r\n        flatNumber: \"\",\r\n        floorNumber: \"\",\r\n        blockNumber: \"\",\r\n        area: \"\",\r\n        blockIncharge: \"\",\r\n        dateOfPossession: \"\",\r\n        meterNumber: \"\",\r\n        hasLift: true,\r\n        hasDG: true\r\n    }\r\n    const classes = useStyles();\r\n    const { flatId } = useParams();\r\n    const history = useHistory();\r\n    const errorCtx = useContext(errorContext);\r\n    const { selectedProjectId } = useProjectContext();\r\n    console.log(selectedProjectId);\r\n    if (!selectedProjectId) history.push(\"/projects\");\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isReset, setIsReset] = useState(false);\r\n    const { user } = useContext(AuthContext);\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [flat, setFlat] = useState(FlatStructure);\r\n\r\n    const { run: getFlatById } = usePost(\"/flats/getFlat\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                let requiredFlat = data?.flat;\r\n                console.log(requiredFlat);\r\n                delete requiredFlat[\"CAMHistories\"];\r\n                delete requiredFlat[\"electricityHistories\"];\r\n                //requiredFlat.hasDG = true;\r\n                //requiredFlat.hasLift = true;\r\n                setStartDate(new Date(requiredFlat?.dateOfPossession));\r\n                setFlat(requiredFlat);\r\n                setLoading(false);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n\r\n    useEffect(() => {\r\n        if (flatId) {\r\n            setLoading(true);\r\n            setIsEdit(true);\r\n            getFlatById({ flatId: flatId });\r\n        }\r\n    }, [flatId]);\r\n\r\n\r\n    const { run: CreateFlat } = usePost(\"/flats/addFlats\",\r\n        null,\r\n        {\r\n            onResolve: (data) => {\r\n                errorCtx.setSuccess(\"Flat Saved Successfully\");\r\n                setIsReset(true);\r\n                history.push(\"/flat/add\");\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n            }\r\n        });\r\n\r\n    const { run: UpdateFlat } = usePost(\"/flats/updateFlat\",\r\n        null,\r\n        {\r\n            onResolve: (data) => {\r\n                console.log(\"update\", selectedProjectId);\r\n                errorCtx.setSuccess(\"Flat Updated Successfully\");\r\n                history.push(\"/flat/edit/\" + flatId);\r\n            },\r\n            onReject: (err) => {\r\n                errorCtx.setError(err);\r\n            }\r\n        });\r\n\r\n    const SaveFlat = (values, setSubmitting) => {\r\n        if (isEdit) {\r\n            console.log(\"values\", values);\r\n            const updatedProjectId = selectedProjectId;\r\n            delete values[\"projectId\"];\r\n            values.dateOfPossession = startDate;\r\n            let updatedFlat = { projectId: updatedProjectId, flat: values };\r\n            //values.projectId = updatedProjectId;\r\n            UpdateFlat(updatedFlat);\r\n            setTimeout(() => {\r\n                setSubmitting(false);\r\n            }, 400);\r\n        } else {\r\n            //values.createdBy = user.id;\r\n            values.dateOfPossession = startDate;\r\n            let insertedProject = {\r\n                projectId: selectedProjectId,\r\n                flats: [values]\r\n            }\r\n            CreateFlat(insertedProject);\r\n            setTimeout(() => {\r\n                setSubmitting(false);\r\n            }, 400);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isReset) {\r\n            setFlat(FlatStructure);\r\n        }\r\n    }, [isReset])\r\n\r\n    return (\r\n        <div className=\"project\">\r\n            <div className=\"project__header\">\r\n                <div className=\"project__body--heading\">{isEdit ? \"Edit\" : \"Add\"} Flat</div>\r\n                <div className=\"project__header--filter\">\r\n                    <Link className=\"project__header--filter--button\" to={\"/Project/\" + selectedProjectId} >View All Flats</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"project__body\">\r\n                {\r\n                    loading ? <Loading /> :\r\n                        <>\r\n                            <Formik\r\n                                enableReinitialize\r\n                                validateOnMount={true}\r\n                                initialValues={flat}\r\n                                validationSchema={Yup.object({\r\n                                    // projectsBillingInformations: Yup.object({\r\n                                    //     CAM_penalize_percentage: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     electricity_penalize_percentage: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     IFMS_balance: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     CAM_fixed_charge: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     water_charge: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     lift_charge: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     CAM_charge_multiplier: Yup.string()\r\n                                    //         .required('Required'),\r\n                                    //     DG_charge_multiplier: Yup.string()\r\n                                    //         .required('Required')\r\n                                    // }),\r\n                                    //name: Yup.string()\r\n                                    //  .max(50, 'Must be 50 characters or less')\r\n                                    // .required('Required')\r\n                                    //startedOn: Yup.string()\r\n                                    //    .required('Required')\r\n                                })}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    SaveFlat(values, setSubmitting);\r\n                                }}\r\n                                onReset={() => { setStartDate(null); return FlatStructure; }}\r\n                            >\r\n                                {props => {\r\n                                    const {\r\n                                        isSubmitting,\r\n                                        setFieldValue,\r\n                                        handleChange,\r\n                                        values\r\n                                    } = props;\r\n                                    return (\r\n                                        <div className=\"project__body--content\">\r\n                                            <div className=\"project__body--contentBody\">\r\n                                                <Form className=\"ProjectForm\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"input-label\">Property Type</label>\r\n                                                            <select name=\"propertyType\" defaultValue={flat.propertyType} onChange={handleChange} className={cm(classes.selectDropdown, \"input-text\")} >\r\n                                                                <option value=\"-1\">Choose PropertyType</option>\r\n                                                                <option value=\"0\">3 BHK</option>\r\n                                                                <option value=\"1\">Others</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"input-label\">Possession Date</label>\r\n                                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                                <KeyboardDatePicker\r\n                                                                    className=\"input-text\"\r\n                                                                    variant=\"inline\"\r\n                                                                    format=\"DD-MM-YYYY\"\r\n                                                                    margin=\"normal\"\r\n                                                                    id=\"date-picker-inline\"\r\n                                                                    name=\"dateOfPossession\"\r\n                                                                    value={startDate}\r\n                                                                    onChange={date => { setStartDate(date); }}\r\n                                                                    autoOk\r\n                                                                />\r\n                                                            </MuiPickersUtilsProvider>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Owner Name\"\r\n                                                            name=\"ownerName\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Owner Name\"\r\n                                                            className=\"input-text\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Resident Name\"\r\n                                                            name=\"residentName\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Resident Name\"\r\n                                                            className=\"input-text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Flat Number\"\r\n                                                            name=\"flatNumber\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Flat Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Floor Number\"\r\n                                                            name=\"floorNumber\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Floor Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Area\"\r\n                                                            name=\"area\"\r\n                                                            type=\"number\"\r\n                                                            placeholder=\"Area\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Block Number\"\r\n                                                            name=\"blockNumber\"\r\n                                                            type=\"Text\"\r\n                                                            placeholder=\"Block Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyTextInput\r\n                                                            label=\"Block Incharge\"\r\n                                                            name=\"blockIncharge\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Block Incharge\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                        <MyTextInput\r\n                                                            label=\"Meter Number\"\r\n                                                            name=\"meterNumber\"\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Meter Number\"\r\n                                                            className=\"input-text wid50\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <MyCheckBox name=\"hasLift\">\r\n                                                            Is Lift Present\r\n                                                        </MyCheckBox>\r\n                                                        <MyCheckBox name=\"hasDG\">\r\n                                                            Is DG Present\r\n                                                        </MyCheckBox>\r\n                                                    </div>\r\n                                                    <div className=\"row btn-group\">\r\n                                                        <button disabled={isSubmitting} className={cm(\"blue_button\", \"dbutton\", \"editUp\", \"btn\")} type=\"submit\">\r\n                                                            {isEdit ? \"Update\" : \"Save\"}\r\n                                                        </button>\r\n                                                        <button className={cm(\"grey_button\", \"dbutton\", \"btn\")} type=\"reset\">Cancel</button>\r\n                                                    </div></Form>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFlat;\r\n","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\Spinner.js",["201","202"],"import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport spinner from '../img/spinner.gif';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    spinnerdiv: {\r\n        marginTop: '5%',\r\n        marginLeft: '40%'\r\n    },\r\n    spinnerImg: {\r\n    },\r\n    spinnerText: {\r\n    }\r\n}));\r\n\r\nconst Spinner = ({ SpinnerText }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.spinnerdiv}>\r\n            <img src={spinner} className={classes.spinnerImg} />\r\n            <div className={classes.spinnerText}>{SpinnerText}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\ImportExcel.js",["203","204","205","206","207"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\ProjectRoutes.js",["208"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\utils\\func.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\customInputs\\MyCheckBox.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\flat\\Flat.js",["209","210","211","212","213"],"import { useHistory, useParams, Link } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { usePost } from \"../../utils/hooks\";\r\nimport NoData from \"../NoData\";\r\nimport Loading from \"../Loading\";\r\nimport ViewHistory from './ViewHistory';\r\nimport { useProjectActionsContext } from '../../components/contexts/Project';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        width: '78%',\r\n        margin: '10px',\r\n        height: 'calc(100vh - 7rem)',\r\n        flexDirection: 'column'\r\n    },\r\n    Details: {\r\n        color: '#637390',\r\n        borderRadius: '0.5rem',\r\n        backgroundColor: 'white',\r\n        padding: '1rem 1.2rem 1rem 1.2rem',\r\n        margin: '0 0 1.5rem 0.4rem',\r\n        fontSize: '1rem',\r\n    },\r\n    body: {\r\n        backgroundColor: '#ececec',\r\n        padding: '1.3rem',\r\n        height: '100%'\r\n    },\r\n    tableRow: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        fontSize: '1.8rem',\r\n        justifyContent: 'space-between',\r\n    },\r\n    tableItem: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        margin: '3px 5px',\r\n        padding: '2px',\r\n        alignItems: 'center'\r\n    },\r\n    tableItemKey: { width: '50%' },\r\n    tableItemValue: { width: '50%' },\r\n    table: {\r\n        borderRadius: '0.5rem',\r\n        backgroundColor: 'white',\r\n        margin: '0.2rem 0.4rem',\r\n        padding: '0.5rem',\r\n        fontSize: '1.5rem',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        color: '#637390',\r\n    },\r\n    tableHead: {},\r\n    tableBody: {},\r\n    tableBodyRow: {},\r\n    tableBodyRowItem: {},\r\n    subHeading: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        padding: '0rem 1rem',\r\n        fontSize: '1.5rem',\r\n        backgroundColor: 'white',\r\n        color: '#637390'\r\n    },\r\n    subHeadingText: {},\r\n    noData: {\r\n        textAlign: 'center',\r\n        border: '1px solid #637390',\r\n        color: \"#637390\",\r\n        fontSize: '1.2rem',\r\n        marginBottom: '20px'\r\n    },\r\n}));\r\n\r\nconst Flat = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { flatId } = useParams();\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    console.log(\"flatId\", flatId);\r\n\r\n    const [flatDetails, setFlatDetails] = useState({});\r\n    const [electricityHistory, setElectricityHistory] = useState([]);\r\n    const [camHistory, setCamHistory] = useState([]);\r\n\r\n    const [loadElectricity, setLoadElectricity] = useState(false);\r\n    const [loadCam, setLoadCam] = useState(false);\r\n    const [request, setRequest] = useState(null);\r\n\r\n    const [popUpOpen, setPopUpOpen] = useState(false);\r\n    const [popUpFor, setPopUpFor] = useState(\"\");\r\n\r\n    const handlePopUpOpen = (id) => { setPopUpFor(id); setPopUpOpen(true) };\r\n    const handlePopUpClose = () => setPopUpOpen(false);\r\n\r\n    const setSelectedProjectId = useProjectActionsContext();\r\n\r\n\r\n    const { run: getFlatDetails } = usePost(\"/flats/getFlat\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setSelectedProjectId(data.flat.projectId);\r\n                setFlatDetails(data.flat);\r\n                setLoading(false);\r\n                if (data.flat?.CAMHistories?.length > 0) {\r\n                    setCamHistory(data.flat?.CAMHistories);\r\n                }\r\n                if (data.flat?.electricityHistories?.length > 0) {\r\n                    setElectricityHistory(data.flat?.electricityHistories);\r\n                }\r\n            },\r\n            onReject: (error) => {\r\n            }\r\n        });\r\n\r\n    const { run: getElectricityDetails } = usePost(\"/electricityDetails/GetElectricityDetailsByFlatId\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setLoadElectricity(false)\r\n                setElectricityHistory(data.electricityHistory);\r\n            },\r\n            onReject: (error) => {\r\n                setLoadElectricity(false)\r\n                console.log(\"error fetchBy 0 ------\", error);\r\n            }\r\n        });\r\n\r\n    const { run: getCamDetails } = usePost(\"/camDetails/getCamById\", null,\r\n        {\r\n            onResolve: (data) => {\r\n                setLoadCam(false)\r\n                console.log(\"Thhis is camDetail my array \", JSON.stringify(data));\r\n                setCamHistory(data.camDetail);\r\n            },\r\n            onReject: (error) => {\r\n                setLoadCam(false)\r\n                console.log(\"error fetchBy 0 ------\", error);\r\n            }\r\n        });\r\n\r\n    useEffect(() => {\r\n        if (flatId) {\r\n            setLoading(true);\r\n            getFlatDetails({ flatId });\r\n        }\r\n    }, [flatId]);\r\n\r\n    useEffect(() => {\r\n        if (loadElectricity) {\r\n            console.log(loadElectricity);\r\n            console.log(request);\r\n            getElectricityDetails(request);\r\n        }\r\n    }, [loadElectricity]);\r\n\r\n    useEffect(() => {\r\n        if (loadCam) {\r\n            console.log(loadCam);\r\n            console.log(request);\r\n            getCamDetails(request);\r\n        }\r\n    }, [loadCam]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classes.container}>\r\n                <div className=\"project__header\">\r\n                    <div className=\"project__body--heading\">Flat Details</div>\r\n                    <div className=\"project__header--filter\">\r\n                        <Link className=\"project__header--filter--button\" to={\"/Billings\"} >View All Flats</Link>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.body}>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className=\"project__header\">\r\n                <div className=\"project__body--heading\">Flat Details</div>\r\n                <div className=\"project__header--filter\">\r\n                    <Link className=\"project__header--filter--button\" to={\"/Billings\"} >View All Flats</Link>\r\n                </div>\r\n            </div>\r\n            <div className={classes.body}>\r\n                {(flatDetails ?\r\n                    (\r\n                        <div className={classes.Details}>\r\n                            <div className={classes.tableRow}>\r\n                                <div className={classes.tableItem}>\r\n                                    <label className={classes.tableItemKey}><b>Flat Number:</b></label>\r\n                                    <div className={classes.tableItemValue}>{flatDetails.flatNumber}</div>\r\n                                </div>\r\n                                <div className={classes.tableRow}>\r\n                                    <div className={classes.tableItem}>\r\n                                        <label className={classes.tableItemKey}><b>Floor Number:</b></label>\r\n                                        <div className={classes.tableItemValue}>{flatDetails.floorNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.tableRow}>\r\n                                <div className={classes.tableItem}>\r\n                                    <label className={classes.tableItemKey}><b>Block No:</b></label>\r\n                                    <div className={classes.tableItemValue}>{flatDetails.blockNumber}</div>\r\n                                </div>\r\n                                <div className={classes.tableRow}>\r\n                                    <div className={classes.tableItem}>\r\n                                        <label className={classes.tableItemKey}><b>Area:</b></label>\r\n                                        <div className={classes.tableItemValue}>{flatDetails.area}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.tableRow}>\r\n                                <div className={classes.tableItem}>\r\n                                    <label className={classes.tableItemKey}><b>Resident Name:</b></label>\r\n                                    <div className={classes.tableItemValue}>{flatDetails.residentName}</div>\r\n                                </div>\r\n                                <div className={classes.tableRow}>\r\n                                    <div className={classes.tableItem}>\r\n                                        <label className={classes.tableItemKey}><b>Owner Name:</b></label>\r\n                                        <div className={classes.tableItemValue}>{flatDetails.ownerName}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.tableRow}>\r\n                                <div className={classes.tableItem}>\r\n                                    <label className={classes.tableItemKey}><b>Date Of Possession:</b></label>\r\n                                    <div className={classes.tableItemValue}>{flatDetails.dateOfPossession}</div>\r\n                                </div>\r\n                                <div className={classes.tableRow}>\r\n                                    <div className={classes.tableItem}>\r\n                                        <label className={classes.tableItemKey}><b>MeterNumber:</b></label>\r\n                                        <div className={classes.tableItemValue}>{flatDetails.meterNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.tableRow}>\r\n                                <div className={classes.tableItem}>\r\n                                    <label className={classes.tableItemKey}><b>Block Incharge:</b></label>\r\n                                    <div className={classes.tableItemValue}>{flatDetails.blockIncharge}</div>\r\n                                </div>\r\n                                <div className={classes.tableRow}>\r\n                                    <div className={classes.tableItem}>\r\n                                        <label className={classes.tableItemKey}><b>propertyType:</b></label>\r\n                                        <div className={classes.tableItemValue}>{flatDetails.propertyType == 0 ? \"3BHK\" : \"Others\"}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    : <NoData />)\r\n                }\r\n                <div className={classes.subHeading}>\r\n                    <div className={classes.subHeadingText}><b>Electricity History</b></div>\r\n                    <div className=\"project__header--filter\">\r\n                        <button onClick={(e) => { e.stopPropagation(); return handlePopUpOpen(\"Electricity\"); }} className=\"projectId__header--filter--button\" >View</button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    electricityHistory && electricityHistory.length > 0 ?\r\n                        (\r\n                            <table border={2} className={classes.table}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Bill Date</th>\r\n                                        <th>Bill Number</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Month</th>\r\n                                        <th>Paid On</th>\r\n                                        <th>Paid Via</th>\r\n                                        <th>Receipt Number</th>\r\n                                        <th>Total Consumption</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        (\r\n                                            Object.keys(electricityHistory).map((key) => {\r\n                                                let { billDate, billNumber, amount, month, paidOn, paidVia, receiptNumber, totalConsumption } = electricityHistory[key]\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{billDate}</td>\r\n                                                        <td>{billNumber}</td>\r\n                                                        <td>{amount}</td>\r\n                                                        <td>{month}</td>\r\n                                                        <td>{paidOn}</td>\r\n                                                        <td>{paidVia}</td>\r\n                                                        <td>{receiptNumber}</td>\r\n                                                        <td>{totalConsumption}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        ) : <div className={classes.noData}>{loadElectricity ? \"Loading...\" : \"No Bill In Histroy\"}</div>\r\n                }\r\n                <div className={classes.subHeading}>\r\n                    <div className={classes.subHeadingText}><b>CAM History</b></div>\r\n                    <div className=\"project__header--filter\">\r\n                        <button onClick={(e) => { e.stopPropagation(); return handlePopUpOpen(\"Cam\"); }} className=\"projectId__header--filter--button\" >View</button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    camHistory && camHistory.length > 0 ?\r\n                        (\r\n                            <table border={2} className={classes.table}>\r\n                                <thead className={classes.tableHead}>\r\n                                    <tr>\r\n                                        <th>Bill Date</th>\r\n                                        <th>Bill Number</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Month</th>\r\n                                        <th>Paid On</th>\r\n                                        <th>Paid Via</th>\r\n                                        <th>Receipt Number</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className={classes.tableBody}>\r\n                                    {\r\n                                        (\r\n                                            Object.keys(camHistory).map((key) => {\r\n                                                let { billDate, billNumber, amount, month, paidOn, paidVia, receiptNumber } = camHistory[key]\r\n                                                return (\r\n                                                    <tr className={classes.tableBodyRow}>\r\n                                                        <td>{billDate}</td>\r\n                                                        <td>{billNumber}</td>\r\n                                                        <td>{amount}</td>\r\n                                                        <td>{month}</td>\r\n                                                        <td>{paidOn}</td>\r\n                                                        <td>{paidVia}</td>\r\n                                                        <td>{receiptNumber}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        ) : <div className={classes.noData}>{loadCam ? \"Loading...\" : \"No Bill In Histroy\"}</div>\r\n                }\r\n            </div>\r\n            <ViewHistory\r\n                open={popUpOpen}\r\n                handlePopUpClose={handlePopUpClose}\r\n                popUpFor={popUpFor}\r\n                flatId={flatId}\r\n                setLoadElectricity={setLoadElectricity}\r\n                setLoadCam={setLoadCam}\r\n                setRequest={setRequest}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Flat;","E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\config.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\NoData.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\billing\\Billling.js",["214","215","216","217","218","219","220","221","222","223","224","225","226"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\routes\\BillingRoutes.js",["227"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\grid\\colmodels\\TransactionsModels.js",[],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\grid\\TransactionGrid.js",["228","229"],"E:\\Free-Lancing Project\\OmaxeWebsite-master\\src\\components\\billing\\ViewBills.js",["230","231","232","233","234","235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"236","replacedBy":"240"},{"ruleId":"238","replacedBy":"241"},{"ruleId":"236","replacedBy":"242"},{"ruleId":"238","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":20},{"ruleId":"244","severity":1,"message":"248","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":16},{"ruleId":"244","severity":1,"message":"249","line":3,"column":27,"nodeType":"246","messageId":"247","endLine":3,"endColumn":33},{"ruleId":"244","severity":1,"message":"250","line":19,"column":19,"nodeType":"246","messageId":"247","endLine":19,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":25,"column":81,"nodeType":"253","messageId":"254","endLine":25,"endColumn":83},{"ruleId":"251","severity":1,"message":"252","line":26,"column":149,"nodeType":"253","messageId":"254","endLine":26,"endColumn":151},{"ruleId":"255","severity":1,"message":"256","line":42,"column":8,"nodeType":"257","endLine":42,"endColumn":27,"suggestions":"258"},{"ruleId":"251","severity":1,"message":"252","line":105,"column":39,"nodeType":"253","messageId":"254","endLine":105,"endColumn":41},{"ruleId":"244","severity":1,"message":"248","line":8,"column":10,"nodeType":"246","messageId":"247","endLine":8,"endColumn":16},{"ruleId":"244","severity":1,"message":"249","line":8,"column":27,"nodeType":"246","messageId":"247","endLine":8,"endColumn":33},{"ruleId":"244","severity":1,"message":"259","line":27,"column":13,"nodeType":"246","messageId":"247","endLine":27,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":49,"column":81,"nodeType":"253","messageId":"254","endLine":49,"endColumn":83},{"ruleId":"251","severity":1,"message":"252","line":50,"column":149,"nodeType":"253","messageId":"254","endLine":50,"endColumn":151},{"ruleId":"255","severity":1,"message":"260","line":80,"column":8,"nodeType":"257","endLine":80,"endColumn":19,"suggestions":"261"},{"ruleId":"255","severity":1,"message":"262","line":86,"column":8,"nodeType":"257","endLine":86,"endColumn":19,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"264","line":91,"column":8,"nodeType":"257","endLine":91,"endColumn":20,"suggestions":"265"},{"ruleId":"251","severity":1,"message":"252","line":96,"column":25,"nodeType":"253","messageId":"254","endLine":96,"endColumn":27},{"ruleId":"244","severity":1,"message":"266","line":111,"column":11,"nodeType":"246","messageId":"247","endLine":111,"endColumn":23},{"ruleId":"244","severity":1,"message":"267","line":116,"column":95,"nodeType":"246","messageId":"247","endLine":116,"endColumn":104},{"ruleId":"236","replacedBy":"268"},{"ruleId":"238","replacedBy":"269"},{"ruleId":"244","severity":1,"message":"270","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"271","line":14,"column":8,"nodeType":"246","messageId":"247","endLine":14,"endColumn":16},{"ruleId":"244","severity":1,"message":"272","line":1,"column":16,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":20,"column":29,"nodeType":"275","endLine":20,"endColumn":51},{"ruleId":"244","severity":1,"message":"276","line":8,"column":8,"nodeType":"246","messageId":"247","endLine":8,"endColumn":14},{"ruleId":"244","severity":1,"message":"277","line":10,"column":8,"nodeType":"246","messageId":"247","endLine":10,"endColumn":20},{"ruleId":"244","severity":1,"message":"248","line":24,"column":10,"nodeType":"246","messageId":"247","endLine":24,"endColumn":16},{"ruleId":"244","severity":1,"message":"249","line":24,"column":27,"nodeType":"246","messageId":"247","endLine":24,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":58,"column":81,"nodeType":"253","messageId":"254","endLine":58,"endColumn":83},{"ruleId":"251","severity":1,"message":"252","line":60,"column":149,"nodeType":"253","messageId":"254","endLine":60,"endColumn":151},{"ruleId":"255","severity":1,"message":"256","line":78,"column":8,"nodeType":"257","endLine":78,"endColumn":19,"suggestions":"278"},{"ruleId":"255","severity":1,"message":"279","line":131,"column":8,"nodeType":"257","endLine":131,"endColumn":17,"suggestions":"280"},{"ruleId":"244","severity":1,"message":"281","line":8,"column":10,"nodeType":"246","messageId":"247","endLine":8,"endColumn":14},{"ruleId":"244","severity":1,"message":"248","line":9,"column":10,"nodeType":"246","messageId":"247","endLine":9,"endColumn":16},{"ruleId":"244","severity":1,"message":"282","line":9,"column":18,"nodeType":"246","messageId":"247","endLine":9,"endColumn":25},{"ruleId":"244","severity":1,"message":"283","line":4,"column":8,"nodeType":"246","messageId":"247","endLine":4,"endColumn":16},{"ruleId":"244","severity":1,"message":"284","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":12},{"ruleId":"244","severity":1,"message":"285","line":7,"column":8,"nodeType":"246","messageId":"247","endLine":7,"endColumn":16},{"ruleId":"244","severity":1,"message":"286","line":10,"column":17,"nodeType":"246","messageId":"247","endLine":10,"endColumn":20},{"ruleId":"244","severity":1,"message":"287","line":14,"column":8,"nodeType":"246","messageId":"247","endLine":14,"endColumn":18},{"ruleId":"244","severity":1,"message":"248","line":28,"column":10,"nodeType":"246","messageId":"247","endLine":28,"endColumn":16},{"ruleId":"244","severity":1,"message":"249","line":28,"column":27,"nodeType":"246","messageId":"247","endLine":28,"endColumn":33},{"ruleId":"244","severity":1,"message":"259","line":87,"column":13,"nodeType":"246","messageId":"247","endLine":87,"endColumn":17},{"ruleId":"255","severity":1,"message":"288","line":117,"column":8,"nodeType":"257","endLine":117,"endColumn":16,"suggestions":"289"},{"ruleId":"255","severity":1,"message":"290","line":176,"column":8,"nodeType":"257","endLine":176,"endColumn":17,"suggestions":"291"},{"ruleId":"244","severity":1,"message":"292","line":227,"column":41,"nodeType":"246","messageId":"247","endLine":227,"endColumn":54},{"ruleId":"244","severity":1,"message":"293","line":229,"column":41,"nodeType":"246","messageId":"247","endLine":229,"endColumn":47},{"ruleId":"244","severity":1,"message":"270","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"295","line":21,"column":13,"nodeType":"275","endLine":21,"endColumn":65},{"ruleId":"244","severity":1,"message":"281","line":9,"column":10,"nodeType":"246","messageId":"247","endLine":9,"endColumn":14},{"ruleId":"244","severity":1,"message":"248","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":16},{"ruleId":"244","severity":1,"message":"282","line":10,"column":18,"nodeType":"246","messageId":"247","endLine":10,"endColumn":25},{"ruleId":"244","severity":1,"message":"296","line":14,"column":10,"nodeType":"246","messageId":"247","endLine":14,"endColumn":28},{"ruleId":"251","severity":1,"message":"252","line":117,"column":21,"nodeType":"253","messageId":"254","endLine":117,"endColumn":23},{"ruleId":"244","severity":1,"message":"286","line":8,"column":17,"nodeType":"246","messageId":"247","endLine":8,"endColumn":20},{"ruleId":"244","severity":1,"message":"297","line":84,"column":11,"nodeType":"246","messageId":"247","endLine":84,"endColumn":18},{"ruleId":"255","severity":1,"message":"298","line":155,"column":8,"nodeType":"257","endLine":155,"endColumn":16,"suggestions":"299"},{"ruleId":"255","severity":1,"message":"300","line":163,"column":8,"nodeType":"257","endLine":163,"endColumn":25,"suggestions":"301"},{"ruleId":"255","severity":1,"message":"302","line":171,"column":8,"nodeType":"257","endLine":171,"endColumn":17,"suggestions":"303"},{"ruleId":"251","severity":1,"message":"252","line":257,"column":107,"nodeType":"253","messageId":"254","endLine":257,"endColumn":109},{"ruleId":"244","severity":1,"message":"281","line":6,"column":10,"nodeType":"246","messageId":"247","endLine":6,"endColumn":14},{"ruleId":"244","severity":1,"message":"248","line":21,"column":10,"nodeType":"246","messageId":"247","endLine":21,"endColumn":16},{"ruleId":"244","severity":1,"message":"249","line":21,"column":27,"nodeType":"246","messageId":"247","endLine":21,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":115,"column":85,"nodeType":"253","messageId":"254","endLine":115,"endColumn":87},{"ruleId":"255","severity":1,"message":"304","line":155,"column":8,"nodeType":"257","endLine":155,"endColumn":47,"suggestions":"305"},{"ruleId":"251","severity":1,"message":"306","line":161,"column":58,"nodeType":"253","messageId":"254","endLine":161,"endColumn":60},{"ruleId":"255","severity":1,"message":"307","line":164,"column":8,"nodeType":"257","endLine":164,"endColumn":31,"suggestions":"308"},{"ruleId":"255","severity":1,"message":"309","line":204,"column":8,"nodeType":"257","endLine":204,"endColumn":17,"suggestions":"310"},{"ruleId":"244","severity":1,"message":"292","line":290,"column":45,"nodeType":"246","messageId":"247","endLine":290,"endColumn":58},{"ruleId":"251","severity":1,"message":"252","line":318,"column":203,"nodeType":"253","messageId":"254","endLine":318,"endColumn":205},{"ruleId":"251","severity":1,"message":"252","line":318,"column":232,"nodeType":"253","messageId":"254","endLine":318,"endColumn":234},{"ruleId":"251","severity":1,"message":"252","line":319,"column":200,"nodeType":"253","messageId":"254","endLine":319,"endColumn":202},{"ruleId":"251","severity":1,"message":"252","line":319,"column":230,"nodeType":"253","messageId":"254","endLine":319,"endColumn":232},{"ruleId":"244","severity":1,"message":"286","line":7,"column":17,"nodeType":"246","messageId":"247","endLine":7,"endColumn":20},{"ruleId":"244","severity":1,"message":"270","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"311","line":15,"column":9,"nodeType":"257","endLine":15,"endColumn":11,"suggestions":"312"},{"ruleId":"244","severity":1,"message":"313","line":12,"column":13,"nodeType":"246","messageId":"247","endLine":12,"endColumn":18},{"ruleId":"244","severity":1,"message":"314","line":13,"column":13,"nodeType":"246","messageId":"247","endLine":13,"endColumn":24},{"ruleId":"244","severity":1,"message":"315","line":25,"column":10,"nodeType":"246","messageId":"247","endLine":25,"endColumn":22},{"ruleId":"244","severity":1,"message":"259","line":83,"column":13,"nodeType":"246","messageId":"247","endLine":83,"endColumn":17},{"ruleId":"255","severity":1,"message":"316","line":239,"column":8,"nodeType":"257","endLine":239,"endColumn":23,"suggestions":"317"},{"ruleId":"251","severity":1,"message":"252","line":243,"column":21,"nodeType":"253","messageId":"254","endLine":243,"endColumn":23},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],["318"],["319"],["318"],["319"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useGet' is defined but never used.","'usePut' is defined but never used.","'logout' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjectById'. Either include it or remove the dependency array.","ArrayExpression",["320"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFlatsList', 'getProjectById', and 'setSelectedProjectId'. Either include them or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'getFlatsList' and 'projectId'. Either include them or remove the dependency array.",["322"],"React Hook useEffect has a missing dependency: 'searchFlats'. Either include it or remove the dependency array.",["323"],"'goToEditFlat' is assigned a value but never used.","'projectId' is assigned a value but never used.",["318"],["319"],"'useState' is defined but never used.","'HomePage' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'search' is defined but never used.","'pencil_black' is defined but never used.",["324"],"React Hook useEffect has a missing dependency: 'projectStructure'. Either include it or remove the dependency array.",["325"],"'Link' is defined but never used.","'usePost' is defined but never used.","'flatById' is defined but never used.","'Flat' is defined but never used.","'NotFound' is defined but never used.","'url' is assigned a value but never used.","'DatePicker' is defined but never used.","React Hook useEffect has a missing dependency: 'getFlatById'. Either include it or remove the dependency array.",["326"],"React Hook useEffect has a missing dependency: 'FlatStructure'. Either include it or remove the dependency array.",["327"],"'setFieldValue' is assigned a value but never used.","'values' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FormatAlignJustify' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFlatDetails'. Either include it or remove the dependency array.",["328"],"React Hook useEffect has missing dependencies: 'getElectricityDetails' and 'request'. Either include them or remove the dependency array.",["329"],"React Hook useEffect has missing dependencies: 'getCamDetails' and 'request'. Either include them or remove the dependency array.",["330"],"React Hook useEffect has a missing dependency: 'getBillingHeads'. Either include it or remove the dependency array.",["331"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'getBillingHeadById' and 'selectedProjectId'. Either include them or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'billingHeadStructure'. Either include it or remove the dependency array.",["333"],"React Hook React.useMemo has a missing dependency: 'models'. Either include it or remove the dependency array.",["334"],"'jsPDF' is defined but never used.","'html2canvas' is defined but never used.","'errorContext' is defined but never used.","React Hook useEffect has missing dependencies: 'viewBillRequest' and 'viewBills'. Either include them or remove the dependency array.",["335"],"no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [getProjectById, selectedProjectId]",{"range":"368","text":"369"},"Update the dependencies array to be: [getFlatsList, getProjectById, projectId, setSelectedProjectId]",{"range":"370","text":"371"},"Update the dependencies array to be: [getFlatsList, loadFlats, projectId]",{"range":"372","text":"373"},"Update the dependencies array to be: [searchFlats, searchText]",{"range":"374","text":"375"},"Update the dependencies array to be: [getProjectById, projectId]",{"range":"376","text":"377"},"Update the dependencies array to be: [isReset, projectStructure]",{"range":"378","text":"379"},"Update the dependencies array to be: [flatId, getFlatById]",{"range":"380","text":"381"},"Update the dependencies array to be: [FlatStructure, isReset]",{"range":"382","text":"383"},"Update the dependencies array to be: [flatId, getFlatDetails]",{"range":"384","text":"385"},"Update the dependencies array to be: [getElectricityDetails, loadElectricity, request]",{"range":"386","text":"387"},"Update the dependencies array to be: [getCamDetails, loadCam, request]",{"range":"388","text":"389"},"Update the dependencies array to be: [selectedProjectId, isLoadBillingHeads, getBillingHeads]",{"range":"390","text":"391"},"Update the dependencies array to be: [isEdit, billingHeadId, selectedProjectId, getBillingHeadById]",{"range":"392","text":"393"},"Update the dependencies array to be: [billingHeadStructure, isReset]",{"range":"394","text":"395"},"Update the dependencies array to be: [models]",{"range":"396","text":"397"},"Update the dependencies array to be: [loadViewBills, viewBillRequest, viewBills]",{"range":"398","text":"399"},[1726,1745],"[getProjectById, selectedProjectId]",[3083,3094],"[getFlatsList, getProjectById, projectId, setSelectedProjectId]",[3233,3244],"[getFlatsList, loadFlats, projectId]",[3331,3343],"[searchFlats, searchText]",[2625,2636],"[getProjectById, projectId]",[4358,4367],"[isReset, projectStructure]",[3587,3595],"[flatId, getFlatById]",[5443,5452],"[FlatStructure, isReset]",[4804,4812],"[flatId, getFlatDetails]",[5014,5031],"[getElectricityDetails, loadElectricity, request]",[5209,5218],"[getCamDetails, loadCam, request]",[4880,4919],"[selectedProjectId, isLoadBillingHeads, getBillingHeads]",[5237,5260],"[isEdit, billingHeadId, selectedProjectId, getBillingHeadById]",[6586,6595],"[billingHeadStructure, isReset]",[532,534],"[models]",[9216,9231],"[loadViewBills, viewBillRequest, viewBills]"]